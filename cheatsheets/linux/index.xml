<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Nándor</title>
    <link>http://nandor.ml/cheatsheets/linux/</link>
    <description>Recent content in Linux on Nándor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Sep 2022 16:53:47 +0300</lastBuildDate><atom:link href="http://nandor.ml/cheatsheets/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Xargs</title>
      <link>http://nandor.ml/cheatsheets/linux/xargs/</link>
      <pubDate>Sat, 21 Jan 2023 23:34:46 +0200</pubDate>
      
      <guid>http://nandor.ml/cheatsheets/linux/xargs/</guid>
      <description>Introduction source allows for piping to the command arguments essentially converts stdin to command line call as with all stdin programs, if you don&amp;rsquo;t pipe another command into it, input is read from the terminal command1 | xargs command2 particularly useful for calling programs with the output of dmenu Separation by default, xargs collects all of stdin and executes the command once this can be changed to run the command every X lines or space-separated words a custom delimiter can also be given Front Hotkey Command Notes Perskey Run xargs command after every line of input xargs -L 1 figlet Run xargs command after every word of input xargs -n 1 figlet Run xargs command separated by &amp;lsquo;w&amp;rsquo; xargs -n 1 -d w figlet Delimiter Options xargs -t to also print the command being ran xargs -r to only run if stdin is not empty xargs -p to prompt Substitution if the command is not specified, it&amp;rsquo;s echo the argument(s) are appended at the end by default -I implies -L1 Front Hotkey Command Notes Perskey Run xargs using substitution for the argument xargs -I {} figlet a {} b Run multiple commands in an xargs call xargs -I {} sh -c &amp;ldquo;figlet {} &amp;amp;&amp;amp; echo {}&amp;rdquo; </description>
    </item>
    
    <item>
      <title>Cron</title>
      <link>http://nandor.ml/cheatsheets/linux/cron/</link>
      <pubDate>Thu, 05 Jan 2023 22:12:48 +0200</pubDate>
      
      <guid>http://nandor.ml/cheatsheets/linux/cron/</guid>
      <description>Introduction cronjob, crontab source source if a cronjob is supposed to execute, but the system is turned off, the cronjob will be skipped % signs in cronjob definitions need to be escaped as \% see logs: sudo cat /var/log/cron Installation There are multiple implementations. Example using Cronie and Arch:
sudo pacman -S cronie sudo systemctl enable --now cronie Jobs Front Hotkey Command Notes Perskey Edit crontabs crontab -e Show crontabs crontab -l Run crontab as another user crontab -u Times .</description>
    </item>
    
    <item>
      <title>Arch Packages</title>
      <link>http://nandor.ml/cheatsheets/linux/arch-packages/</link>
      <pubDate>Tue, 08 Nov 2022 20:10:06 +0200</pubDate>
      
      <guid>http://nandor.ml/cheatsheets/linux/arch-packages/</guid>
      <description>Editors &amp;amp; Tools p gdisk partition manager Development p hugo static website generator p vimpager less replacement Browsers &amp;amp; Players p task taskwarrior p firefox web browser y tor-browser p virtualbox y anki p keepass Players p cmus terminal-based music player p vlc or mpv video player p gthumb image viewer Fun p cmatrix cool animation p figlet cool text p lolcat cool colors p neofetch mandatory for Arch Hardware p firejail sandboxer p ufw uncomplicated firewall Desktop p slock screen locker y albert p thunar or nemo graphical file manager Install Scripts Requires Javascript</description>
    </item>
    
    <item>
      <title>Archinstall</title>
      <link>http://nandor.ml/cheatsheets/linux/archinstall/</link>
      <pubDate>Sun, 25 Sep 2022 15:14:28 +0300</pubDate>
      
      <guid>http://nandor.ml/cheatsheets/linux/archinstall/</guid>
      <description>Arch Linux is a Linux distro that&amp;rsquo;s relatively hard to install. While guided installers do exist, part of an Arch user&amp;rsquo;s pride comes from going through the process manually. It&amp;rsquo;s actually not difficult at all - running a list on commands in the right order with occasional decisionmaking woven in - but it is a great learning opportunity.
This guide is based on my personal notes. Parts not relevant to me, such as a non-English keyboard layout it omitted because I never needed it.</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>http://nandor.ml/cheatsheets/linux/git/</link>
      <pubDate>Sun, 25 Sep 2022 15:10:49 +0300</pubDate>
      
      <guid>http://nandor.ml/cheatsheets/linux/git/</guid>
      <description>What is Git? made by Linus Torvalds to manage the Linux kernel distributed, non-linear workflows free/open-source network/server not required Graphical Clients frontend to git commands provide some helpful visualizations I recommend learning the commands themselves Sourcetree Github Desktop GitKraken Git GUI My notes contain Markdown/HTML tables in this format. This is to make it easy to export them. See J2A.
Front Hotkey Command Notes Perskey Start git repo git init Commits asd &amp;ndash;asd&amp;ndash; ddd</description>
    </item>
    
    <item>
      <title>Vim</title>
      <link>http://nandor.ml/cheatsheets/linux/vim/</link>
      <pubDate>Sun, 25 Sep 2022 15:10:47 +0300</pubDate>
      
      <guid>http://nandor.ml/cheatsheets/linux/vim/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Bash</title>
      <link>http://nandor.ml/cheatsheets/linux/bash/</link>
      <pubDate>Sun, 25 Sep 2022 15:10:43 +0300</pubDate>
      
      <guid>http://nandor.ml/cheatsheets/linux/bash/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
